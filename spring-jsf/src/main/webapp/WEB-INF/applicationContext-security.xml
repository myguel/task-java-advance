<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd">

	<security:global-method-security pre-post-annotations="enabled" secured-annotations="enabled" jsr250-annotations="enabled"/>
	<security:http auto-config="true" use-expressions="true" access-denied-page="/pages/public/accessdenegate.xhtml">
		<security:intercept-url pattern="/pages/public/"		access="permitAll" />
		<security:intercept-url pattern="/resources/css/**"			access="permitAll" />
		<security:intercept-url pattern="/resources/fonts/**"			access="permitAll" />
		<security:intercept-url pattern="/resources/images/**"			access="permitAll" />
		<security:intercept-url pattern="/resources/js/**"			access="permitAll" />
		<security:intercept-url pattern="/resources/templates/**"			access="permitAll" />	
		<security:intercept-url pattern="/pages/secure/**"	access="hasRole('ROL_ADMINISTRADOR')" />		
<!-- 		<security:intercept-url pattern="/pages/secure/**"	access="permitAll" /> -->
		<security:intercept-url pattern="/**" access="permitAll" />
		<security:form-login login-page="/pages/public/login-interno.xhtml" />
		<security:logout invalidate-session="true"	logout-url="/"		
			logout-success-url="/pages/public/login-interno.xhtml"></security:logout>
	</security:http>


<!-- 	<security:authentication-manager alias="authenticationManager"> -->
<!-- 		<security:authentication-provider user-service-ref="userDetailsService"> -->
<!-- 		</security:authentication-provider> -->
<!-- 	</security:authentication-manager> -->


	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider>
			<security:jdbc-user-service data-source-ref="dataSource"
			users-by-username-query="SELECT  usuario_login AS username, usuario_password AS password, estado AS enabled FROM usuario WHERE usuario_login=?" 
			authorities-by-username-query="SELECT u.usuario_login AS username, ur.permiso AS authority FROM usuario u LEFT JOIN usuario_rol ur ON u.usuario_id = ur.usuario_id WHERE  u.usuario_login=?"/>
		</security:authentication-provider>
	</security:authentication-manager>




</beans>
